[% import "Ecore2ETL-util.eol"; %]
import "DSL2SysMini-util.eol";

pre{
	"------------------ ETL Start ------------------".println();
	main();
}

post{
	"------------------ ETL Over  ------------------".println();
}

@abstract
rule Base
	transform s : DSL!EObject
	to t : SysMini!PartUsage{
	if (s.hasProperty("name")){
		t.declaredName = s.name;
	}
	}
	
[%=root.main()%]
[% operation Ecore!EClass writeEClass(){%]
@lazy
rule [%=self.name%]
	transform s : DSL![%=self.name%]
	to t : SysMini!PartUsage
	extends Base{
	[%	for (eAttribute in self.eContents().select(s|s.type().name == "EAttribute")){%]
	if (s.[%=eAttribute.name%].getEAttribute() != ""){
		var [%=eAttribute.name%] = new SysMini!AttributeUsage;
		[%=eAttribute.name%].featureNote.add(":>>");
		[%=eAttribute.name%].featureSpecialization.add("[%=eAttribute.name%]");
		[%=eAttribute.name%].valuePart = s.[%=eAttribute.name%].getEAttribute();
		t.body.add([%=eAttribute.name%]);
		}
	[%}%]
	}

[%}%]

[% operation Ecore!EPackage main(){ 
	var eClassSequence = root.eClassifiers.select(s|s.type().name == "EClass");
	for (eClass in eClassSequence){
		eClass.writeEClass();

	} 
}%]


