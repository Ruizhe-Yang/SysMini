operation main(){
	var rootEcore = DSL!EObject.all.first();
	var rootSysMini = new SysMini!Namespace;
	var rootPackage = new SysMini!Package;
	rootPackage.declaredName = "SysML-gen";
	rootSysMini.body.add(rootPackage);
	rootEcore.addNodeTo(rootPackage);
}


operation DSL!EObject addNodeTo(rootNode : SysMini!Element){
	if (self.isEntity()){
		var node = self.equivalent();
		rootNode.body.add(node);
		for (child in self.eContents()){
			child.addNodeTo(node);
		}
	}
}

operation DSL!EObject isEntity(){
	return true;
}

operation DSL!EObject isRoot(){
	if (type == 1){
		type = 0;
		return true;
	}
	else{
		return false;
	}
}

operation Sequence getElementOf(typeName : String){
	return self.select(e|e.type().name == typeName);
}

operation Any getEAttribute(){
	self.type().print();
	self.println(" ");
	if (self == "" or self == null){
		return "";
	}
	else if (self.type().hasProperty("name") and self.type().name == "String"){
		return "\""+self+"\"";
	}
	else{
		return self.asString();
	}
}